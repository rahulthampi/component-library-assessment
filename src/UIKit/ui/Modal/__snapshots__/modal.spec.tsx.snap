// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UIKit/Modal should open modal(of size: lg) and close the modal when Trigger and Close are clicked 1`] = `
"Snapshot Diff:
- First value
+ Second value

  <DocumentFragment>
    <button
      aria-controls="radix-:r9:"
-     aria-expanded="false"
+     aria-expanded="true"
      aria-haspopup="dialog"
      class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
-     data-state="closed"
+     data-state="open"
      type="button"
    >
      Open Modal
    </button>
  </DocumentFragment>"
`;

exports[`UIKit/Modal should open modal(of size: md) and close the modal when Trigger and Close are clicked 1`] = `
"Snapshot Diff:
- First value
+ Second value

  <DocumentFragment>
    <button
      aria-controls="radix-:r6:"
-     aria-expanded="false"
+     aria-expanded="true"
      aria-haspopup="dialog"
      class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
-     data-state="closed"
+     data-state="open"
      type="button"
    >
      Open Modal
    </button>
  </DocumentFragment>"
`;

exports[`UIKit/Modal should open modal(of size: sm) and close the modal when Trigger and Close are clicked 1`] = `
"Snapshot Diff:
- First value
+ Second value

  <DocumentFragment>
    <button
      aria-controls="radix-:r3:"
-     aria-expanded="false"
+     aria-expanded="true"
      aria-haspopup="dialog"
      class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
-     data-state="closed"
+     data-state="open"
      type="button"
    >
      Open Modal
    </button>
  </DocumentFragment>"
`;

exports[`UIKit/Modal should open modal(of size: xl) and close the modal when Trigger and Close are clicked 1`] = `
"Snapshot Diff:
- First value
+ Second value

  <DocumentFragment>
    <button
      aria-controls="radix-:rc:"
-     aria-expanded="false"
+     aria-expanded="true"
      aria-haspopup="dialog"
      class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
-     data-state="closed"
+     data-state="open"
      type="button"
    >
      Open Modal
    </button>
  </DocumentFragment>"
`;

exports[`UIKit/Modal should render only the trigger and no modal content 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        aria-controls="radix-:r0:"
        aria-expanded="false"
        aria-haspopup="dialog"
        class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
        data-state="closed"
        type="button"
      >
        Open Modal
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-controls="radix-:r0:"
      aria-expanded="false"
      aria-haspopup="dialog"
      class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
      data-state="closed"
      type="button"
    >
      Open Modal
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
